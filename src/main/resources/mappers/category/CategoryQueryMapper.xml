<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.harusari.chainware.category.query.mapper.CategoryQueryMapper">

    <!-- 1. 전체 카테고리 조회: 카테고리 + 상위 카테고리 + 제품 수 -->
    <select id="searchCategoriesWithTopAndProductCount"
            resultType="com.harusari.chainware.category.query.dto.response.CategoryWithTopResponse">
        SELECT
        c.category_id AS categoryId,
        c.category_name AS categoryName,
        tc.top_category_id AS topCategoryId,
        tc.top_category_name AS topCategoryName,
        COUNT(p.product_id) AS productCount,
        c.created_at AS createdAt,
        c.modified_at AS modifiedAt
        FROM category c
        JOIN top_category tc ON c.top_category_id = tc.top_category_id
        LEFT JOIN product p ON p.category_id = c.category_id
        WHERE 1 = 1
        <if test="request.topCategoryName != null and request.topCategoryName != ''">
            AND tc.top_category_name LIKE CONCAT('%', #{request.topCategoryName}, '%')
        </if>
        <if test="request.categoryName != null and request.categoryName != ''">
            AND c.category_name LIKE CONCAT('%', #{request.categoryName}, '%')
        </if>
        GROUP BY c.category_id, c.category_name, tc.top_category_id, tc.top_category_name
        ORDER BY
        ${request.sortByOrDefault} ${request.sortDirOrDefault}
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="countCategoriesWithCondition" resultType="long">
        SELECT COUNT(*)
        FROM category c
        JOIN top_category tc ON c.top_category_id = tc.top_category_id
        WHERE 1 = 1
        <if test="request.topCategoryName != null and request.topCategoryName != ''">
            AND tc.top_category_name LIKE CONCAT('%', #{request.topCategoryName}, '%')
        </if>
        <if test="request.categoryName != null and request.categoryName != ''">
            AND c.category_name LIKE CONCAT('%', #{request.categoryName}, '%')
        </if>
    </select>

    <!-- 2. 특정 상위 카테고리에 연결된 제품 목록 조회 (카테고리 조인 포함) -->
    <select id="selectCategoryBasic" resultType="com.harusari.chainware.category.query.dto.response.CategoryMetaInfoResponse">
        SELECT
        c.category_id AS categoryId,
        c.category_name AS categoryName,
        c.created_at AS createdAt,
        c.modified_at AS modifiedAt
        FROM category c
        WHERE c.category_id = #{categoryId}
    </select>

    <select id="selectTopCategoryBasic" resultType="com.harusari.chainware.category.query.dto.response.TopCategoryOnlyResponse">
        SELECT
            top_category_id AS topCategoryId,
            top_category_name AS topCategoryName,
            created_at AS createdAt,
            modified_at AS modifiedAt
        FROM top_category
        WHERE top_category_id = #{topCategoryId}
    </select>

    <select id="countProductsByTopCategoryId"
            resultType="long">
        SELECT COUNT(*)
        FROM product p
        JOIN category c ON p.category_id = c.category_id
        WHERE c.top_category_id = #{topCategoryId}
    </select>

    <select id="selectProductsByTopCategoryId" resultMap="ProductDtoMap">
        SELECT
        p.product_id,
        p.product_name,
        p.product_code,
        p.category_id,
        c.category_name,
        p.base_price,
        p.unit_quantity,
        p.unit_spec,
        p.store_type,
        p.safety_stock,
        p.origin,
        p.shelf_life,
        p.product_status,
        c.created_at AS productCreatedAt,
        c.modified_at AS productModifiedAt
        FROM product p
        JOIN category c ON p.category_id = c.category_id
        WHERE c.top_category_id = #{topCategoryId}
        ORDER BY p.product_id
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 3. 특정 카테고리 단건 조회 (상위 카테고리 포함) -->
    <select id="selectCategoryInfoWithTop"
            parameterType="long"
            resultType="com.harusari.chainware.category.query.dto.response.CategoryDetailInfoResponse">
        SELECT
        c.category_id AS categoryId,
        c.category_name AS categoryName,
        tc.top_category_id AS topCategoryId,
        tc.top_category_name AS topCategoryName
        FROM category c
        JOIN top_category tc ON c.top_category_id = tc.top_category_id
        WHERE c.category_id = #{categoryId}
    </select>

    <!-- 3-1. 특정 카테고리의 제품 목록 조회 (페이징 포함) -->
    <resultMap id="ProductDtoMap" type="com.harusari.chainware.product.query.dto.response.ProductDto">
        <constructor>
            <idArg column="product_id" javaType="java.lang.Long"/>
            <arg column="product_name" javaType="java.lang.String"/>
            <arg column="product_code" javaType="java.lang.String"/>
            <arg column="category_id" javaType="java.lang.Long"/>
            <arg column="base_price" javaType="java.lang.Integer"/>
            <arg column="unit_quantity" javaType="java.lang.String"/>
            <arg column="unit_spec" javaType="java.lang.String"/>
            <arg column="store_type" javaType="com.harusari.chainware.product.command.domain.aggregate.StoreType"/>
            <arg column="safety_stock" javaType="java.lang.Integer"/>
            <arg column="origin" javaType="java.lang.String"/>
            <arg column="shelf_life" javaType="java.lang.Integer"/>
            <arg column="product_status" javaType="Boolean"/>
            <arg column="productCreatedAt" javaType="java.time.LocalDateTime"/>
            <arg column="productModifiedAt" javaType="java.time.LocalDateTime"/>
        </constructor>
    </resultMap>

    <select id="selectProductsByCategoryId"
            resultMap="ProductDtoMap">
        SELECT
        product_id,
        product_name,
        product_code,
        category_id,
        base_price,
        unit_quantity,
        unit_spec,
        store_type,
        safety_stock,
        origin,
        shelf_life,
        product_status,
        created_at AS productCreatedAt,
        modified_at AS productModifiedAt
        FROM product
        WHERE category_id = #{categoryId}
        ORDER BY product_id
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="countProductsByCategoryId" resultType="long">
        SELECT COUNT(*) FROM product WHERE category_id = #{categoryId}
    </select>

    <select id="selectTopCategoryIdByCategoryId"
            parameterType="long"
            resultType="java.lang.Long">
        SELECT top_category_id
        FROM category
        WHERE category_id = #{categoryId}
    </select>

    <select id="selectCategoryProductCountsByTopCategoryId"
            resultType="com.harusari.chainware.category.query.dto.response.CategoryProductCountResponse">
        SELECT
        c.category_id AS categoryId,
        COUNT(p.product_id) AS productCount
        FROM category c
        LEFT JOIN product p ON p.category_id = c.category_id
        WHERE c.top_category_id = #{topCategoryId}
        GROUP BY c.category_id
    </select>
</mapper>