<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.harusari.chainware.product.query.mapper.ProductQueryMapper">

    <!-- 전체 조회 with 동적 필터 (파라미터명 'request' 사용) -->
    <select id="findProductsByConditions"
            parameterType="com.harusari.chainware.product.query.dto.request.ProductSearchRequest"
            resultType="com.harusari.chainware.product.query.dto.response.ProductDto">
        SELECT
        p.product_id,
        p.product_name,
        p.product_code,
        p.category_id,
        p.base_price,
        p.unit_quantity,
        p.unit_spec,
        p.store_type,
        p.safety_stock,
        p.origin,
        p.shelf_life,
        p.product_status,
        p.created_at      AS product_created_at,
        p.modified_at     AS product_modified_at
        FROM product p
        LEFT JOIN category c   ON p.category_id = c.category_id
        LEFT JOIN top_category tc ON c.top_category_id = tc.top_category_id
        WHERE p.is_deleted = false

        <if test="request.productName != null and request.productName.trim() != ''">
            AND p.product_name LIKE CONCAT('%', #{request.productName}, '%')
        </if>
        <if test="request.topCategoryName != null and request.topCategoryName.trim() != ''">
            AND tc.top_category_name LIKE CONCAT('%', #{request.topCategoryName}, '%')
        </if>
        <if test="request.categoryName != null and request.categoryName.trim() != ''">
            AND c.category_name LIKE CONCAT('%', #{request.categoryName}, '%')
        </if>
        <if test="request.storeType != null">
            AND p.store_type = #{request.storeType}
        </if>
        <if test="request.productStatusFilter != null">
            <choose>
                <when test="request.productStatusFilter.name() == 'ACTIVE_ONLY'">
                    AND p.product_status = true
                </when>
                <when test="request.productStatusFilter.name() == 'INACTIVE_ONLY'">
                    AND p.product_status = false
                </when>
                <!-- BOTH: 필터 생략 -->
            </choose>
        </if>
        <if test="request.createdAt != null">
            AND DATE(p.created_at) = #{request.createdAt}
        </if>

        ORDER BY p.product_id DESC
        LIMIT #{request.limit} OFFSET #{request.offset}
    </select>

    <!-- 전체 카운트 -->
    <select id="countProductsByConditions"
            parameterType="com.harusari.chainware.product.query.dto.request.ProductSearchRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM product p
        LEFT JOIN category c   ON p.category_id = c.category_id
        LEFT JOIN top_category tc ON c.top_category_id = tc.top_category_id
        WHERE p.is_deleted = false

        <if test="request.productName != null and request.productName.trim() != ''">
            AND p.product_name LIKE CONCAT('%', #{request.productName}, '%')
        </if>
        <if test="request.topCategoryName != null and request.topCategoryName.trim() != ''">
            AND tc.top_category_name LIKE CONCAT('%', #{request.topCategoryName}, '%')
        </if>
        <if test="request.categoryName != null and request.categoryName.trim() != ''">
            AND c.category_name LIKE CONCAT('%', #{request.categoryName}, '%')
        </if>
        <if test="request.storeType != null">
            AND p.store_type = #{request.storeType}
        </if>
        <if test="request.productStatusFilter != null">
            <choose>
                <when test="request.productStatusFilter.name() == 'ACTIVE_ONLY'">
                    AND p.product_status = true
                </when>
                <when test="request.productStatusFilter.name() == 'INACTIVE_ONLY'">
                    AND p.product_status = false
                </when>
            </choose>
        </if>
        <if test="request.createdAt != null">
            AND DATE(p.created_at) = #{request.createdAt}
        </if>
    </select>

    <!-- ID 조회, 계약/벤더 매퍼 등 기존 부분은 그대로 유지 -->
    <select id="findProductById"
            parameterType="long"
            resultType="com.harusari.chainware.product.query.dto.response.ProductDto">
        SELECT
        product_id,
        product_name,
        product_code,
        category_id,
        base_price,
        unit_quantity,
        unit_spec,
        store_type,
        safety_stock,
        origin,
        shelf_life,
        product_status,
        created_at      AS product_created_at,
        modified_at     AS product_modified_at
        FROM product
        WHERE is_deleted = false
        AND product_id = #{productId}
    </select>

    <resultMap id="VendorProductContractMap" type="com.harusari.chainware.contract.query.dto.response.VendorProductContractDto">
        <!-- Vendor -->
        <result column="vendor_id" property="vendorId" />

        <!-- Product -->
        <result column="product_id" property="productId" />
        <result column="product_name" property="productName" />
        <result column="top_category_id" property="topCategoryId" />
        <result column="top_category_name" property="topCategoryName" />
        <result column="category_id" property="categoryId" />
        <result column="category_name" property="categoryName" />
        <result column="store_type" property="storeType" />
        <result column="base_price" property="basePrice" />
        <result column="unit_quantity" property="unitQuantity" />
        <result column="unit_spec" property="unitSpec" />

        <!-- Contract -->
        <result column="contract_id" property="contractId" />
        <result column="contract_price" property="contractPrice" />
        <result column="min_order_qty" property="minOrderQty" />
        <result column="lead_time" property="leadTime" />
        <result column="contract_start_date" property="contractStartDate" javaType="java.time.LocalDate"/>
        <result column="contract_end_date" property="contractEndDate" javaType="java.time.LocalDate"/>
        <result column="contract_status" property="contractStatus" />
        <result column="created_at" property="createdAt" javaType="java.time.LocalDateTime"/>
        <result column="modified_at" property="modifiedAt" javaType="java.time.LocalDateTime"/>
    </resultMap>

    <select id="findVendorContractsByProductId"
            parameterType="com.harusari.chainware.contract.query.dto.request.VendorByProductRequest"
            resultMap="VendorProductContractMap">
        SELECT
        c.contract_id,
        v.vendor_name,
        p.product_name,
        p.base_price,
        c.contract_price,
        c.min_order_qty,
        c.lead_time,
        c.contract_status,
        c.contract_start_date,
        c.contract_end_date,

        v.vendor_id,
        p.product_id,
        p.unit_quantity,
        p.unit_spec,
        p.store_type,
        tc.top_category_id,
        tc.top_category_name,
        c2.category_id AS category_id,
        c2.category_name AS category_name,
        c.created_at,
        c.modified_at

        FROM contract c
        JOIN product p ON c.product_id = p.product_id
        JOIN vendor v ON c.vendor_id = v.vendor_id
        JOIN category c2 ON p.category_id = c2.category_id
        JOIN top_category tc ON c2.top_category_id = tc.top_category_id
        WHERE c.product_id = #{productId}
        AND c.is_deleted = false
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="findVendorsByProductId"
            resultType="com.harusari.chainware.vendor.query.dto.VendorDto">
        SELECT
        v.vendor_id,
        v.vendor_name,
        v.vendor_type,
        v.vendor_tax_id,
        v.vendor_memo,
        v.vendor_status,
        v.vendor_start_date,
        v.vendor_end_date
        FROM vendor v
        JOIN contract c ON v.vendor_id = c.vendor_id
        WHERE c.product_id = #{productId}
        AND c.is_deleted = false
        LIMIT #{limit}
        OFFSET #{offset}
    </select>

    <select id="countVendorsByProductId"
            parameterType="com.harusari.chainware.contract.query.dto.request.VendorByProductRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM vendor v
        JOIN contract c ON v.vendor_id = c.vendor_id
        WHERE c.product_id = #{productId}
        AND c.is_deleted = false
    </select>

</mapper>