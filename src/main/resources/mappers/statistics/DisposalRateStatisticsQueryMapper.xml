<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.harusari.chainware.statistics.query.mapper.DisposalRateStatisticsQueryMapper">

    <!-- 기간별 폐기율 (일간 데이터 조회) -->
    <select id="getDisposalRate" resultType="com.harusari.chainware.statistics.query.dto.disposal.DisposalRateStatisticsResponse">
        SELECT
        DATE(d.created_at) AS date,
        CASE
        WHEN #{warehouseId} IS NULL AND #{franchiseId} IS NULL THEN '전체'
        WHEN #{warehouseId} IS NOT NULL THEN w.warehouse_name
        WHEN #{franchiseId} IS NOT NULL THEN f.franchise_name
        END AS targetName,
        SUM(d.quantity) AS disposalQty,
        <choose>
            <when test="warehouseId != null">
                (SELECT SUM(i.unit_quantity)
                FROM warehouse_inbound i
                WHERE i.warehouse_id = #{warehouseId}
                AND DATE(i.inbounded_at) = DATE(d.created_at)) AS totalQty
            </when>
            <when test="franchiseId != null">
                (SUM(d.quantity) +
                (SELECT COALESCE(SUM(sd.quantity), 0)
                FROM sales s
                JOIN sales_detail sd ON s.sales_id = sd.sales_id
                WHERE s.franchise_id = #{franchiseId}
                AND DATE(s.sold_at) = DATE(d.created_at))) AS totalQty
            </when>
            <otherwise>
                (SUM(d.quantity) +
                (SELECT COALESCE(SUM(i.unit_quantity), 0) FROM warehouse_inbound i WHERE DATE(i.inbounded_at) = DATE(d.created_at)) +
                (SELECT COALESCE(SUM(sd.quantity), 0)
                FROM sales s
                JOIN sales_detail sd ON s.sales_id = sd.sales_id
                WHERE DATE(s.sold_at) = DATE(d.created_at))) AS totalQty
            </otherwise>
        </choose>,
        ROUND(
        SUM(d.quantity) / NULLIF(
        <choose>
            <when test="warehouseId != null">
                (SELECT SUM(i.unit_quantity)
                FROM warehouse_inbound i
                WHERE i.warehouse_id = #{warehouseId}
                AND DATE(i.inbounded_at) = DATE(d.created_at))
            </when>
            <when test="franchiseId != null">
                (SUM(d.quantity) +
                (SELECT COALESCE(SUM(sd.quantity), 0)
                FROM sales s
                JOIN sales_detail sd ON s.sales_id = sd.sales_id
                WHERE s.franchise_id = #{franchiseId}
                AND DATE(s.sold_at) = DATE(d.created_at)))
            </when>
            <otherwise>
                (SUM(d.quantity) +
                (SELECT COALESCE(SUM(i.unit_quantity), 0) FROM warehouse_inbound i WHERE DATE(i.inbounded_at) = DATE(d.created_at)) +
                (SELECT COALESCE(SUM(sd.quantity), 0)
                FROM sales s
                JOIN sales_detail sd ON s.sales_id = sd.sales_id
                WHERE DATE(s.sold_at) = DATE(d.created_at)))
            </otherwise>
        </choose>,
        0) * 100, 2
        ) AS disposalRate
        FROM disposal d
        LEFT JOIN warehouse w ON d.warehouse_id = w.warehouse_id
        LEFT JOIN franchise f ON d.franchise_id = f.franchise_id
        WHERE d.created_at BETWEEN #{startDate} AND #{endDate}
        <if test="warehouseId != null">
            AND d.warehouse_id = #{warehouseId}
        </if>
        <if test="franchiseId != null">
            AND d.franchise_id = #{franchiseId}
        </if>
        GROUP BY DATE(d.created_at), targetName
        ORDER BY date ASC
    </select>

    <!-- 상품별 폐기율 (입고 기준) -->
    <select id="getProductLevelDisposalRate" resultType="com.harusari.chainware.statistics.query.dto.disposal.DisposalRateProductStatisticsResponse">
        SELECT
        DATE(d.created_at) AS date,
        p.product_name,
        SUM(d.quantity) AS disposalQty,
        (
        SELECT SUM(i.unit_quantity)
        FROM warehouse_inbound i
        WHERE i.product_id = d.product_id
        AND DATE(i.inbounded_at) = DATE(d.created_at)
        ) AS totalQty,
        ROUND(
        SUM(d.quantity) / NULLIF((
        SELECT SUM(i.unit_quantity)
        FROM warehouse_inbound i
        WHERE i.product_id = d.product_id
        AND DATE(i.inbounded_at) = DATE(d.created_at)
        ), 0) * 100, 2
        ) AS disposalRate
        FROM disposal d
        JOIN product p ON d.product_id = p.product_id
        WHERE d.created_at BETWEEN #{startDate} AND #{endDate}
        <if test="warehouseId != null">
            AND d.warehouse_id = #{warehouseId}
        </if>
        <if test="franchiseId != null">
            AND d.franchise_id = #{franchiseId}
        </if>
        GROUP BY DATE(d.created_at), p.product_name, d.product_id
        ORDER BY date ASC
    </select>

        <!-- 전체 폐기율 추이 -->
    <select id="getTrendForTotal" resultType="com.harusari.chainware.statistics.query.dto.disposal.DisposalRateStatisticsResponse">
        SELECT
        <choose>
            <when test='"WEEKLY".equals(period)'>
                STR_TO_DATE(CONCAT(YEAR(d.created_at), ' ', WEEK(d.created_at), ' 1'), '%X %V %w') AS date
            </when>
            <when test='"MONTHLY".equals(period)'>
                DATE_FORMAT(d.created_at, '%Y-%m-01') AS date
            </when>
        </choose>,
        '전체' AS targetName,
        SUM(d.quantity) AS disposalQty,
        (
        SUM(d.quantity) +
        (SELECT COALESCE(SUM(i.unit_quantity), 0) FROM warehouse_inbound i WHERE i.inbounded_at &lt;= #{targetDate}) +
        (SELECT COALESCE(SUM(sd.quantity), 0) FROM sales s JOIN sales_detail sd ON s.sales_id = sd.sales_id WHERE s.sold_at &lt;= #{targetDate})
        ) AS totalQty,
        ROUND(
        SUM(d.quantity) / NULLIF((
        SUM(d.quantity) +
        (SELECT COALESCE(SUM(i.unit_quantity), 0) FROM warehouse_inbound i WHERE i.inbounded_at &lt;= #{targetDate}) +
        (SELECT COALESCE(SUM(sd.quantity), 0) FROM sales s JOIN sales_detail sd ON s.sales_id = sd.sales_id WHERE s.sold_at &lt;= #{targetDate})
        ), 0) * 100, 2
        ) AS disposalRate
        FROM disposal d
        WHERE d.created_at &lt;= #{targetDate}
        <choose>
            <when test='"WEEKLY".equals(period)'>
                GROUP BY YEAR(d.created_at), WEEK(d.created_at)
            </when>
            <when test='"MONTHLY".equals(period)'>
                GROUP BY DATE_FORMAT(d.created_at, '%Y-%m')
            </when>
        </choose>
        ORDER BY date ASC
        LIMIT 7
    </select>

    <!-- 본사 창고 폐기율 추이 -->
    <select id="getTrendForHeadquarters" resultType="com.harusari.chainware.statistics.query.dto.disposal.DisposalRateStatisticsResponse">
        SELECT
        <choose>
            <when test='"WEEKLY".equals(period)'>
                STR_TO_DATE(CONCAT(YEAR(d.created_at), ' ', WEEK(d.created_at), ' 1'), '%X %V %w') AS date
            </when>
            <when test='"MONTHLY".equals(period)'>
                DATE_FORMAT(d.created_at, '%Y-%m-01') AS date
            </when>
        </choose>,
        '본사 창고' AS targetName,
        SUM(d.quantity) AS disposalQty,
        (SELECT SUM(i.unit_quantity)
        FROM warehouse_inbound i
        WHERE i.inbounded_at &lt;= #{targetDate}) AS totalQty,
        ROUND(SUM(d.quantity) / NULLIF((
        (SELECT SUM(i.unit_quantity)
        FROM warehouse_inbound i
        WHERE i.inbounded_at &lt;= #{targetDate})
        ), 0) * 100, 2) AS disposalRate
        FROM disposal d
        WHERE d.warehouse_id IS NOT NULL
        AND d.created_at &lt;= #{targetDate}
        <choose>
            <when test='"WEEKLY".equals(period)'>
                GROUP BY YEAR(d.created_at), WEEK(d.created_at)
            </when>
            <when test='"MONTHLY".equals(period)'>
                GROUP BY DATE_FORMAT(d.created_at, '%Y-%m')
            </when>
        </choose>
        ORDER BY date ASC
        LIMIT 7
    </select>

    <!-- 가맹점 폐기율 추이 -->
    <select id="getTrendForFranchises" resultType="com.harusari.chainware.statistics.query.dto.disposal.DisposalRateStatisticsResponse">
        SELECT
        <choose>
            <when test='"WEEKLY".equals(period)'>
                STR_TO_DATE(CONCAT(YEAR(d.created_at), ' ', WEEK(d.created_at), ' 1'), '%X %V %w') AS date
            </when>
            <when test='"MONTHLY".equals(period)'>
                DATE_FORMAT(d.created_at, '%Y-%m-01') AS date
            </when>
        </choose>,
        '가맹점' AS targetName,
        SUM(d.quantity) AS disposalQty,
        (SUM(d.quantity) +
        (SELECT COALESCE(SUM(sd.quantity), 0)
        FROM sales s
        JOIN sales_detail sd ON s.sales_id = sd.sales_id
        WHERE s.sold_at &lt;= #{targetDate})) AS totalQty,
        ROUND(
        SUM(d.quantity) / NULLIF(
        SUM(d.quantity) + (
        SELECT COALESCE(SUM(sd.quantity), 0)
        FROM sales s
        JOIN sales_detail sd ON s.sales_id = sd.sales_id
        WHERE s.sold_at &lt;= #{targetDate}
        ),
        0
        ) * 100,
        2
        ) AS disposalRate

        FROM disposal d
        WHERE d.franchise_id IS NOT NULL
        AND d.created_at &lt;= #{targetDate}
        <choose>
            <when test='"WEEKLY".equals(period)'>
                GROUP BY YEAR(d.created_at), WEEK(d.created_at)
            </when>
            <when test='"MONTHLY".equals(period)'>
                GROUP BY DATE_FORMAT(d.created_at, '%Y-%m')
            </when>
        </choose>
        ORDER BY date ASC
        LIMIT 7
    </select>

</mapper>
