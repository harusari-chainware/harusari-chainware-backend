<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.harusari.chainware.statistics.query.mapper.StoreOrderStatisticsQueryMapper">

    <select id="getFranchiseLevelStatistics"
            resultType="com.harusari.chainware.statistics.query.dto.storeOrder.StoreOrderStatisticsResponse">
        SELECT
        DATE(so.created_at) AS date,
        f.franchise_name AS franchiseName,
        COUNT(DISTINCT so.store_order_id) AS totalOrders,
        SUM(sod.quantity) AS totalQuantity,
        SUM(sod.total_price) AS totalAmount
        FROM store_order so
        JOIN store_order_detail sod ON so.store_order_id = sod.store_order_id
        JOIN franchise f ON so.franchise_id = f.franchise_id
        WHERE so.store_order_status = 'APPROVED'
        AND so.created_at BETWEEN #{startDate} AND #{endDate}
        <if test="franchiseId != null">
            AND so.franchise_id = #{franchiseId}
        </if>
        GROUP BY DATE(so.created_at), f.franchise_name
        ORDER BY date ASC
    </select>

    <select id="getProductLevelStatistics"
            resultType="com.harusari.chainware.statistics.query.dto.storeOrder.StoreOrderProductStatisticsResponse">
        SELECT
        DATE(so.created_at) AS date,
        f.franchise_name AS franchiseName,
        p.product_name AS productName,
        SUM(sod.quantity) AS quantity,
        SUM(sod.total_price) AS amount
        FROM store_order so
        JOIN store_order_detail sod ON so.store_order_id = sod.store_order_id
        JOIN product p ON sod.product_id = p.product_id
        JOIN franchise f ON so.franchise_id = f.franchise_id
        WHERE so.store_order_status = 'APPROVED'
        AND so.created_at BETWEEN #{startDate} AND #{endDate}
        <if test="franchiseId != null">
            AND so.franchise_id = #{franchiseId}
        </if>
        GROUP BY DATE(so.created_at), f.franchise_name, p.product_name
        ORDER BY date ASC
    </select>

    <select id="getStoreOrderTrend"
            resultType="com.harusari.chainware.statistics.query.dto.storeOrder.StoreOrderTrendResponse">
        SELECT
        <choose>
            <when test="period == 'WEEKLY'">
                STR_TO_DATE(CONCAT(YEAR(so.created_at), ' ', WEEK(so.created_at), ' 1'), '%X %V %w') AS date
            </when>
            <when test="period == 'MONTHLY'">
                DATE_FORMAT(so.created_at, '%Y-%m-01') AS date
            </when>
            <otherwise>
                DATE(so.created_at) AS date
            </otherwise>
        </choose>,
        COUNT(DISTINCT so.store_order_id) AS totalOrders,
        SUM(sod.quantity) AS totalQuantity,
        SUM(sod.total_price) AS totalAmount
        FROM store_order so
        JOIN store_order_detail sod ON so.store_order_id = sod.store_order_id
        WHERE so.created_at BETWEEN #{startDate} AND #{endDate}
        AND so.store_order_status = 'APPROVED'
        <if test="franchiseId != null">
            AND so.franchise_id = #{franchiseId}
        </if>
        <choose>
            <when test="period == 'WEEKLY'">
                GROUP BY YEAR(so.created_at), WEEK(so.created_at)
            </when>
            <when test="period == 'MONTHLY'">
                GROUP BY DATE_FORMAT(so.created_at, '%Y-%m')
            </when>
            <otherwise>
                GROUP BY DATE(so.created_at)
            </otherwise>
        </choose>
        ORDER BY date ASC
        LIMIT 7
    </select>

</mapper>
